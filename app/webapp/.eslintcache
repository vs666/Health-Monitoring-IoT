[{"/home/einzelganger/Arduino/Health-Monitoring-IoT/app/webapp/src/index.js":"1","/home/einzelganger/Arduino/Health-Monitoring-IoT/app/webapp/src/App.js":"2","/home/einzelganger/Arduino/Health-Monitoring-IoT/app/webapp/src/components/NavB/Navigation.js":"3","/home/einzelganger/Arduino/Health-Monitoring-IoT/app/webapp/src/components/Dashboard/Dash.js":"4","/home/einzelganger/Arduino/Health-Monitoring-IoT/app/webapp/src/components/Dashboard/Card.js":"5","/home/einzelganger/Arduino/Health-Monitoring-IoT/app/webapp/src/components/Update/Upd.js":"6","/home/einzelganger/Arduino/Health-Monitoring-IoT/app/webapp/src/components/Update/Card.js":"7"},{"size":1245,"mtime":1636613639540,"results":"8","hashOfConfig":"9"},{"size":1729,"mtime":1638883437781,"results":"10","hashOfConfig":"9"},{"size":1520,"mtime":1638883084034,"results":"11","hashOfConfig":"9"},{"size":6970,"mtime":1638892573786,"results":"12","hashOfConfig":"9"},{"size":1087,"mtime":1636613639540,"results":"13","hashOfConfig":"9"},{"size":2454,"mtime":1638886031374,"results":"14","hashOfConfig":"9"},{"size":1087,"mtime":1638882904599,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1kr3mhz",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},"/home/einzelganger/Arduino/Health-Monitoring-IoT/app/webapp/src/index.js",[],["35","36"],"/home/einzelganger/Arduino/Health-Monitoring-IoT/app/webapp/src/App.js",["37","38"],"import logo from './logo.svg'\nimport React, { Component } from 'react'\nimport { Route, BrowserRouter, Switch } from 'react-router-dom'\nimport './App.css'\nimport Upd from './components/Update/Upd'\n\n// import SignUp from './Components/SignUp/SignUp';\nimport Dash from './components/Dashboard/Dash'\n// import Login from './Components/LoginPage/Login';\nimport Navigation from './components/NavB/Navigation'\n// import FSign from './Components/SignUp/FSign';\n// import Logout from './Components/LoginPage/Logout';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      data: null,\n    }\n  }\n  \n  componentDidMount() {\n    // Call our fetch function below once the component mounts\n    this.callBackendAPI()\n      .then((res) => this.setState({ data: res.express }))\n      .catch((err) => console.log(err))\n    console.log(this.state.data)\n  }\n\n  callBackendAPI = async () => {\n    const response = await fetch('localhost:5000/')\n    const body = await response.json()\n\n    if (response.status !== 200) {\n      console.log('Server is down.')\n      throw Error(body.message)\n    } else {\n      console.log('Server is up.')\n    }\n    return body\n  }\n\n  logoutFunc = () => {\n    // localStorage.removeItem('hash');\n    localStorage.removeItem('hash')\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navigation />\n        <header className=\"App-header\">\n          <BrowserRouter>\n            <Route exact path=\"/\"></Route>\n            <Route path=\"/dashboard\">\n              <Dash />\n              </Route>\n            <Route path=\"/updateInfo\">\n              <Upd />\n            </Route>\n          </BrowserRouter>\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default App\n","/home/einzelganger/Arduino/Health-Monitoring-IoT/app/webapp/src/components/NavB/Navigation.js",["39","40"],"import React from 'react'\nimport { Nav, Navbar, NavDropdown, Card } from 'react-bootstrap'\nimport styled from 'styled-components'\nimport './Nav.css'\n\nconst Styles = styled.div`\n  .navbar {\n    background-color: rgb(20, 20, 4 0);\n  }\n\n  .navbar-brand,\n  .navbar-nav,\n  .nav-link {\n    color: #bbb;\n    $: hover {\n      color: white;\n    }\n  }\n`\n\nconst Navigation = () => {\n  return (\n    <Styles>\n      <Navbar\n        raised={true}\n        expand=\"lg\"\n        className=\"navbar a\"\n        fixed=\"top\"\n        style={{ backgroundColor: 'rgba(0,0,0,0.3)' }}\n      >\n        {/* <Navbar.Brand href=\"/\"><img src={require(\"\")} alt=\"PC-Cart\" height=\"64\" width=\"64\" /></Navbar.Brand> */}\n        <h2 style={{ padding: '1vh' }}>Wearable-Device</h2>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar -nav\" className=\"navbar a\">\n          <Nav className=\"mr-auto\" style={{ color: '#fff' }}>\n            <Nav.Link href=\"/\" style={{ color: '#000' }}>\n              Home\n            </Nav.Link>\n          </Nav>\n          <Nav className=\"\" style={{ color: '#fff' }}>\n            <Nav.Link href=\"/dashboard\" style={{ color: '#000' }}>\n              Dashboard\n            </Nav.Link>\n          </Nav>\n          <Nav className=\"\" style={{ color: '#fff' }}>\n            <Nav.Link href=\"/updateInfo\" style={{ color: '#000' }}>\n              Personal Info\n            </Nav.Link>\n          </Nav>\n\n        </Navbar.Collapse>\n      </Navbar>\n    </Styles>\n  )\n}\n\nexport default Navigation\n","/home/einzelganger/Arduino/Health-Monitoring-IoT/app/webapp/src/components/Dashboard/Dash.js",["41","42","43","44","45","46","47","48","49","50","51","52","53","54"],"import React, { Component } from 'react'\nimport axios from 'axios'\nimport Alert from 'react-bootstrap/Alert'\nimport ProgressBar from 'react-bootstrap/ProgressBar'\nimport {\n  Button,\n  Form,\n  Card,\n  Jumbotron,\n  Table,\n  Row,\n  Col,\n  Container,\n} from 'react-bootstrap'\nimport './Dash.css'\nimport SimpleCard from './Card'\nimport Grid from '@material-ui/core/Grid'\n\nexport default class Dash extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      key: '',\n      temp: '',\n      bp_dia : '',\n      bp_sys : '',\n      gsr: '-',\n      spo2:'',\n      heart_rate:'',\n      covid_stat:false,\n    }\n    this.interval = setInterval(() => {if(this.state.key!=''){this.login()}}, (1000 * 5))\n    //destroy interval on unmount\n    \n  }\n  componentWillUnmount(){\n    return () => clearInterval(this.interval)\n  }  \n  getMsg_spo2=()=>{\n    if(this.state.covid_stat){\n      return \"Our ML predicts chance of Covid. Please refer to medical assistance immediately.\"\n    }\n    else {\n      return \"ML says all good. Carry on.\"\n    }\n  }\n \n\n  getMsg_panicAttacks = ()=>{\n    if((parseInt(this.state.bp_sys) >= 140.0 && this.state.bp_dia >= 90) && (parseInt(this.state.heart_rate) >= 120)){\n      return \"This is an alert for a panic attack and/or a possible pre-emptive warning for a cardiac arrest. Kindly seek medical help immediately.\"\n    }\n    else {\n      return \"All good. Carry on.\"\n    }\n  }\n\n  login = (event) => {\n    if(event)\n    {    \n      event.preventDefault()\n    }\n    const key_ = this.state.key\n    var data = { key: key_.toString() }\n    console.log(data)\n    // Sending Data\n    axios\n      .post('http://localhost:5000/getData', data)\n      .then((response) => {\n        if (response.data['status'] == 'ok') {\n          // do all work here :sad\n          var elt = JSON.parse(response.data['message']);\n          console.log('rec : ',elt);\n          this.setState({\n            temp: elt['temp'],\n            gsr: elt['hr'],\n            bp_dia: elt['bpdia'],\n            bp_sys: elt['bpsys'],\n            spo2:elt['spo2'],\n            heart_rate:elt['hrate'],\n            covid_stat: response.data['covidstat']==0?false:true,\n          })\n          console.log(response);\n        } else {\n          console.log(response.data)\n        }\n      })\n      .catch((error) => {\n        console.log(error, 'Error')\n      })\n  }\n\n  render() {\n    return (\n      <div style={{ paddingTop: '10%', paddingRight: '2vh' }}>\n        <Grid container justifyContent=\"center\" spacing={24}>\n          <Grid item md={3}>\n            <SimpleCard\n              title=\"Blood Pressure\"\n              value={this.state.bp_sys+\"/\"+this.state.bp_dia}\n            />\n          </Grid>\n          <Grid item md={3}>\n            <SimpleCard title=\"Temperature\" value={this.state.temp} />\n          </Grid>\n          <Grid item md={3}>\n            <SimpleCard title=\"Human Resistance\" value={this.state.gsr} />\n          </Grid>\n          <Grid item md={3}>\n            <SimpleCard title=\"spO2\" value={this.state.spo2} />\n          </Grid>\n          <Grid item md={3}>\n            <SimpleCard title=\"Heart-Rate\" value={this.state.heart_rate} />\n          </Grid>\n\n        </Grid>\n          <Row>\n            <Col>\n          <Alert variant=\"warning\" style={{marginLeft:'5vh'}}>\n            <Alert.Heading>COVID ALERT</Alert.Heading>\n            <p>\n              {this.getMsg_spo2()}\n            </p>\n            <hr />\n            <p className=\"mb-0\">\n              Covid Symptoms : High-Fever, Low levels of SPO2, Cough. If such symptoms occur, consult a doctor immediately.\n            </p>\n          </Alert>\n          </Col>\n          <Col>\n          <Alert variant=\"danger\" style={{paddingLeft:'5vh'}}>\n            <Alert.Heading>Panic Attack Alert</Alert.Heading>\n            <p>\n              {this.getMsg_panicAttacks()}              \n            </p>\n            <hr />\n            <p className=\"mb-0\">\n              Panic Attack : Stress and anxiety, high blood pressure, heart rate, and/or respiratory symptoms. If such symptoms occur, consult a doctor immediately.\n            </p>\n          </Alert>\n            </Col>\n          </Row>\n        <div>\n          <iframe width={\"450\"} height={\"260\"} style={{border: '1px solid #cccccc;', margin:'5vh'}} src={\"https://thingspeak.com/channels/1599973/charts/1?bgcolor=%23ffffff&color=%23d62020&dynamic=true&results=60&title=BodyTemperature&type=line\"}></iframe>\n          <iframe width={\"450\"} height={\"260\"} style={{border: '1px solid #cccccc;', margin:'5vh'}} src={\"https://thingspeak.com/channels/1599973/charts/2?bgcolor=%23ffffff&color=%23d62020&dynamic=true&results=60&title=HumanResistance&type=line\"}></iframe>\n          <br></br>\n          <iframe width={\"450\"} height={\"260\"} style={{border: '1px solid #cccccc;', margin:'5vh'}} src={\"https://thingspeak.com/channels/1599973/charts/1?bgcolor=%23ffffff&color=%23d62020&dynamic=true&results=60&title=BP%28sys%29&type=line\"}></iframe>\n          <iframe width={\"450\"} height={\"260\"} style={{border: '1px solid #cccccc;', margin:'5vh'}} src={\"https://thingspeak.com/channels/1599973/charts/1?bgcolor=%23ffffff&color=%23d62020&dynamic=true&results=60&title=BP%28dia%29e&type=line\"}></iframe>\n            <br></br>\n          <iframe width={\"450\"} height={\"260\"} style={{border: '1px solid #cccccc;', margin:'5vh'}} src={\"https://thingspeak.com/channels/1599973/charts/1?bgcolor=%23ffffff&color=%23d62020&dynamic=true&results=60&title=HeartRate&type=line\"}></iframe>\n          <iframe width={\"450\"} height={\"260\"} style={{border: '1px solid #cccccc;', margin:'5vh'}} src={\"https://thingspeak.com/channels/1599973/charts/1?bgcolor=%23ffffff&color=%23d62020&dynamic=true&results=60&title=SPO2&type=line\"}></iframe>\n        </div>\n        <div style={{ margin: '0', top: '50%', left: '50%' }}>\n          <div className=\"container\" style={{ marginTop: '2vh' }}>\n            <Card style={{ width: '18rem',color:'white',width:'bolder', backgroundColor: 'rgba(20,20,20,0.3)' }}>\n              <Card.Body>\n                <Form\n                  style={{ fontSize: '80%' }}\n                  method=\"post\"\n                  onSubmit={this.login}\n                >\n                  <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Key</Form.Label>\n                    <Form.Control\n                      validations={['required', 'isEmail']}\n                      name=\"email\"\n                      id=\"email\"\n                      value={this.state.email}\n                      onChange={(event) => {\n                        this.setState({ key: event.target.value })\n                      }}\n                      placeholder=\"Enter Key\"\n                    />\n                  </Form.Group>\n\n                  <Button variant=\"success\" type=\"submit\">\n                    Get Data\n                  </Button>\n                </Form>\n              </Card.Body>\n            </Card>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","/home/einzelganger/Arduino/Health-Monitoring-IoT/app/webapp/src/components/Dashboard/Card.js",["55","56"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\nconst styles = {\n  card: {\n    minWidth: 275,\n    display: 'inline-block',\n  },\n}\n\nfunction SimpleCard(props) {\n  const { classes } = props\n  const bull = <span className={classes.bullet}>•</span>\n\n  return (\n    <div style={{ display: 'inline-block' }}>\n      <Card className={classes.card}>\n        <CardContent>\n          <Typography className={classes.title} color=\"textSecondary\">\n            {props.title}\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Typography variant=\"body1\">{props.value}</Typography>\n        </CardActions>\n      </Card>\n    </div>\n  )\n}\n\nSimpleCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(SimpleCard)\n","/home/einzelganger/Arduino/Health-Monitoring-IoT/app/webapp/src/components/Update/Upd.js",["57","58","59","60","61","62","63","64","65","66","67","68","69","70","71"],"/home/einzelganger/Arduino/Health-Monitoring-IoT/app/webapp/src/components/Update/Card.js",["72","73"],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":1,"column":8,"nodeType":"80","messageId":"81","endLine":1,"endColumn":12},{"ruleId":"78","severity":1,"message":"82","line":3,"column":32,"nodeType":"80","messageId":"81","endLine":3,"endColumn":38},{"ruleId":"78","severity":1,"message":"83","line":2,"column":23,"nodeType":"80","messageId":"81","endLine":2,"endColumn":34},{"ruleId":"78","severity":1,"message":"84","line":2,"column":36,"nodeType":"80","messageId":"81","endLine":2,"endColumn":40},{"ruleId":"78","severity":1,"message":"85","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":19},{"ruleId":"78","severity":1,"message":"86","line":9,"column":3,"nodeType":"80","messageId":"81","endLine":9,"endColumn":12},{"ruleId":"78","severity":1,"message":"87","line":10,"column":3,"nodeType":"80","messageId":"81","endLine":10,"endColumn":8},{"ruleId":"78","severity":1,"message":"88","line":13,"column":3,"nodeType":"80","messageId":"81","endLine":13,"endColumn":12},{"ruleId":"89","severity":1,"message":"90","line":32,"column":57,"nodeType":"91","messageId":"92","endLine":32,"endColumn":59},{"ruleId":"89","severity":1,"message":"93","line":70,"column":37,"nodeType":"91","messageId":"92","endLine":70,"endColumn":39},{"ruleId":"89","severity":1,"message":"93","line":81,"column":51,"nodeType":"91","messageId":"92","endLine":81,"endColumn":53},{"ruleId":"94","severity":1,"message":"95","line":144,"column":11,"nodeType":"96","endLine":144,"endColumn":248},{"ruleId":"94","severity":1,"message":"95","line":145,"column":11,"nodeType":"96","endLine":145,"endColumn":248},{"ruleId":"94","severity":1,"message":"95","line":147,"column":11,"nodeType":"96","endLine":147,"endColumn":244},{"ruleId":"94","severity":1,"message":"95","line":148,"column":11,"nodeType":"96","endLine":148,"endColumn":245},{"ruleId":"94","severity":1,"message":"95","line":150,"column":11,"nodeType":"96","endLine":150,"endColumn":242},{"ruleId":"94","severity":1,"message":"95","line":151,"column":11,"nodeType":"96","endLine":151,"endColumn":237},{"ruleId":"97","severity":1,"message":"98","line":155,"column":57,"nodeType":"99","messageId":"92","endLine":155,"endColumn":62},{"ruleId":"78","severity":1,"message":"100","line":7,"column":8,"nodeType":"80","messageId":"81","endLine":7,"endColumn":14},{"ruleId":"78","severity":1,"message":"101","line":19,"column":9,"nodeType":"80","messageId":"81","endLine":19,"endColumn":13},{"ruleId":"78","severity":1,"message":"102","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":13},{"ruleId":"78","severity":1,"message":"85","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":19},{"ruleId":"78","severity":1,"message":"100","line":6,"column":3,"nodeType":"80","messageId":"81","endLine":6,"endColumn":9},{"ruleId":"78","severity":1,"message":"103","line":7,"column":3,"nodeType":"80","messageId":"81","endLine":7,"endColumn":7},{"ruleId":"78","severity":1,"message":"84","line":8,"column":3,"nodeType":"80","messageId":"81","endLine":8,"endColumn":7},{"ruleId":"78","severity":1,"message":"86","line":9,"column":3,"nodeType":"80","messageId":"81","endLine":9,"endColumn":12},{"ruleId":"78","severity":1,"message":"87","line":10,"column":3,"nodeType":"80","messageId":"81","endLine":10,"endColumn":8},{"ruleId":"78","severity":1,"message":"104","line":11,"column":3,"nodeType":"80","messageId":"81","endLine":11,"endColumn":6},{"ruleId":"78","severity":1,"message":"105","line":12,"column":3,"nodeType":"80","messageId":"81","endLine":12,"endColumn":6},{"ruleId":"78","severity":1,"message":"88","line":13,"column":3,"nodeType":"80","messageId":"81","endLine":13,"endColumn":12},{"ruleId":"78","severity":1,"message":"106","line":14,"column":3,"nodeType":"80","messageId":"81","endLine":14,"endColumn":11},{"ruleId":"78","severity":1,"message":"107","line":15,"column":3,"nodeType":"80","messageId":"81","endLine":15,"endColumn":17},{"ruleId":"78","severity":1,"message":"108","line":20,"column":8,"nodeType":"80","messageId":"81","endLine":20,"endColumn":18},{"ruleId":"78","severity":1,"message":"109","line":21,"column":8,"nodeType":"80","messageId":"81","endLine":21,"endColumn":12},{"ruleId":"89","severity":1,"message":"93","line":71,"column":37,"nodeType":"91","messageId":"92","endLine":71,"endColumn":39},{"ruleId":"78","severity":1,"message":"100","line":7,"column":8,"nodeType":"80","messageId":"81","endLine":7,"endColumn":14},{"ruleId":"78","severity":1,"message":"101","line":19,"column":9,"nodeType":"80","messageId":"81","endLine":19,"endColumn":13},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'NavDropdown' is defined but never used.","'Card' is defined but never used.","'ProgressBar' is defined but never used.","'Jumbotron' is defined but never used.","'Table' is defined but never used.","'Container' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","no-dupe-keys","Duplicate key 'width'.","ObjectExpression","'Button' is defined but never used.","'bull' is assigned a value but never used.","'Alert' is defined but never used.","'Form' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Dropdown' is defined but never used.","'DropdownButton' is defined but never used.","'SimpleCard' is defined but never used.","'Grid' is defined but never used.","no-global-assign","no-unsafe-negation"]